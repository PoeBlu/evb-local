{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Transform": [
    "AWS::Serverless-2016-10-31"
  ],
  "Resources": {
    "OnConnectFunction": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "CodeUri": ".",
        "Handler": "src/connect.handler",
        "MemorySize": 256,
        "Runtime": "nodejs12.x",
        "Environment": {
          "Variables": {
            "ConnectionsTable": {
              "Ref": "ConnectionsTable"
            }
          }
        },
        "Policies": [
          {
            "DynamoDBCrudPolicy": {
              "TableName": {
                "Ref": "ConnectionsTable"
              }
            }
          }
        ]
      }
    },
    "RegistrationPermission": {
      "Type": "AWS::Lambda::Permission",
      "DependsOn": [
        "WebSocket",
        "RegistrationFunction"
      ],
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "RegistrationFunction"
        },
        "Principal": "apigateway.amazonaws.com"
      }
    },
    "OnConnectPermission": {
      "Type": "AWS::Lambda::Permission",
      "DependsOn": [
        "WebSocket",
        "OnConnectFunction"
      ],
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "OnConnectFunction"
        },
        "Principal": "apigateway.amazonaws.com"
      }
    },
    "OnDisconnectFunction": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "CodeUri": ".",
        "Handler": "src/disconnect.handler",
        "MemorySize": 256,
        "Runtime": "nodejs12.x",
        "Environment": {
          "Variables": {
            "ConnectionsTable": {
              "Ref": "ConnectionsTable"
            }
          }
        },
        "Policies": [
          {
            "DynamoDBCrudPolicy": {
              "TableName": {
                "Ref": "ConnectionsTable"
              }
            }
          }
        ]
      }
    },
    "OnDisconnectPermission": {
      "Type": "AWS::Lambda::Permission",
      "DependsOn": [
        "WebSocket",
        "OnDisconnectFunction"
      ],
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "OnDisconnectFunction"
        },
        "Principal": "apigateway.amazonaws.com"
      }
    },
    "RegistrationFunction": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "CodeUri": ".",
        "Handler": "src/registration-function.handler",
        "MemorySize": 256,
        "Runtime": "nodejs12.x",
        "Environment": {
          "Variables": {
            "ConnectionsTable": {
              "Ref": "ConnectionsTable"
            }
          }
        },
        "Policies": [
          {
            "DynamoDBCrudPolicy": {
              "TableName": {
                "Ref": "ConnectionsTable"
              }
            }
          }
        ]
      }
    },
    "ConnectionsTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          },
          {
            "AttributeName": "token",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],      
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "TokenGSI",
            "KeySchema": [
              {
                "AttributeName": "token",
                "KeyType": "HASH"
              }
            ],
            "Projection": {
              "ProjectionType": "ALL"
            }
          }
        ],
        "BillingMode": "PAY_PER_REQUEST"
      }
    },
    "WebSocket": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-WebSocket"
        },
        "ProtocolType": "WEBSOCKET",
        "RouteSelectionExpression": "$request.body.action"
      }
    },
    "ConnectIntegration": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "WebSocket"
        },
        "Description": "Connect Integration",
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnConnectFunction.Arn}/invocations"
        }
      }
    },
    "ConnectRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "WebSocket"
        },
        "RouteKey": "$connect",
        "AuthorizationType": "NONE",
        "OperationName": "ConnectRoute",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "ConnectIntegration"
              }
            ]
          ]
        }
      }
    },
    "RegistrationRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "WebSocket"
        },
        "RouteKey": "register",
        "AuthorizationType": "NONE",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "RegistrationIntegration"
              }
            ]
          ]
        }
      }
    },
    "RegistrationIntegration": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "WebSocket"
        },
        "Description": "Registration Integration",
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${RegistrationFunction.Arn}/invocations"
        }
      }
    },
    "DisconnectRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "WebSocket"
        },
        "RouteKey": "$disconnect",
        "AuthorizationType": "NONE",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "DisconnectIntegration"
              }
            ]
          ]
        }
      }
    },
    "DisconnectIntegration": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "WebSocket"
        },
        "Description": "Disconnect Integration",
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnDisconnectFunction.Arn}/invocations"
        }
      }
    },
    "Deployment": {
      "Type": "AWS::ApiGatewayV2::Deployment",
      "DependsOn": [
        "RegistrationRoute",
        "ConnectRoute",
        "DisconnectRoute"
      ],
      "Properties": {
        "ApiId": {
          "Ref": "WebSocket"
        }
      }
    },
    "Stage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "StageName": "Prod",
        "Description": "Prod Stage",
        "DeploymentId": {
          "Ref": "Deployment"
        },
        "ApiId": {
          "Ref": "WebSocket"
        }
      }
    },
    "EventConsumer": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "CodeUri": ".",
        "Runtime": "nodejs12.x",
        "Handler": "src/EventConsumer.receiver",
        "MemorySize": 512,
        "Timeout": 10,
        "Policies": [
          "AmazonAPIGatewayInvokeFullAccess",
          {
            "DynamoDBReadPolicy": {
              "TableName": {
                "Ref": "ConnectionsTable"
              }
            }
          }
        ],
        "Environment": {
          "Variables": {
            "ApiId": {
              "Ref": "WebSocket"
            },
            "ApiBaseUrl": {
              "Fn::ImportValue": "ApiGatewayDomainName"
            },
            "ConnectionsTable": {
              "Ref": "ConnectionsTable"
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": 1
          }
        }
      }
    },
    "EventConsumerPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "EventConsumer"
        },
        "Principal": "events.amazonaws.com"
      }
    },
    "DecomissionRule": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "CodeUri": ".",
        "Runtime": "nodejs12.x",
        "Handler": "src/DecomissionRule.receiver",
        "MemorySize": 512,
        "Timeout": 10,
        "Policies": [
          "AmazonAPIGatewayInvokeFullAccess",
          {
            "DynamoDBReadPolicy": {
              "TableName": {
                "Ref": "ConnectionsTable"
              }
            }
          }
        ],
        "Environment": {
          "Variables": {
            "ApiId": {
              "Ref": "WebSocket"
            },
            "ApiBaseUrl": {
              "Fn::ImportValue": "ApiGatewayDomainName"
            },
            "ConnectionsTable": {
              "Ref": "ConnectionsTable"
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": 1
          }
        }
      }
    },
    "DecomissionStateMachine": {
      "Type": "AWS::StepFunctions::StateMachine",
      "Properties": {
        "DefinitionString": {
          "Fn::Sub": "{\r\n    \"Comment\": \"Delayed execution state machine\",\r\n    \"StartAt\": \"WaitState\",\r\n    \"States\": {\r\n      \"WaitState\": {\r\n      \"Type\": \"Wait\",\r\n      \"SecondsPath\": \"$.DelaySeconds\",\r\n      \"Next\": \"DecomissionRule\"\r\n      },\r\n      \"DecomissionRule\": {\r\n        \"Type\": \"Task\",\r\n        \"Resource\": \"${DecomissionRule.Arn}\",\r\n        \"End\": true\r\n      }\r\n    }\r\n  }\r\n"
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "StatesExecutionRole",
            "Arn"
          ]
        }
      }
    },
    "StatesExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "states.eu-west-1.amazonaws.com"
                ]
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "StatesExecutionPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "lambda:InvokeFunction"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "DecomissionRule",
                        "Arn"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    }
  },
  "Outputs": {}
}